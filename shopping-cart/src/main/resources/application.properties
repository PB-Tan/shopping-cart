spring.config.import=optional:classpath:.env.properties

spring.application.name=shopping-cart
spring.datasource.url=jdbc:mysql://localhost:3306/${DB_NAME:nus}?useSSL=false&allowPublicKeyRetrieval=true
spring.datasource.username=${DB_USERNAME:root}
spring.datasource.password=${DB_PASSWORD:}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

spring.jpa.properties.hibernate.jdbc.time_zone=Asia/Singapore
# use 'update' in development so Hibernate won't drop tables on shutdown
spring.jpa.hibernate.ddl-auto=create-drop
# spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

# Email Configuration for Gmail SMTP | Gmail SMTP 邮件配置
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${MAIL_USERNAME:}
spring.mail.password=${MAIL_PASSWORD:}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.properties.mail.smtp.ssl.protocols=TLSv1.2
spring.mail.properties.mail.smtp.ssl.trust=*

# SQL Initialization (for data.sql)
spring.jpa.defer-datasource-initialization=true
spring.sql.init.mode=always
spring.jpa.properties.hibernate.globally_quoted_identifiers=true

# Google OAuth2 client configuration (set in .env.properties or environment)
# google.client.id and google.client.secret are used by the OAuth flow in
# CustomerController to support 'Sign in with Google'. Example values are
# provided in .env.properties.example. Do NOT commit your client secret.
# google.client.id=your-google-client-id.apps.googleusercontent.com
# google.client.secret=your-google-client-secret